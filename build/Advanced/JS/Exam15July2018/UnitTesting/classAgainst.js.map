{"version":3,"sources":["../../../../../Advanced/JS/Exam15July2018/UnitTesting/classAgainst.js"],"names":["Calculator","constructor","expenses","add","data","push","divideNums","divide","i","length","undefined","Error","toString","join","orderBy","isNumber","sort","a","b","module","exports"],"mappings":";;;AAAA,UAAMA,UAAN,CAAiB;AACbC,sBAAc;AACV,iBAAKC,QAAL,GAAgB,EAAhB;AACH;;AAEDC,YAAIC,IAAJ,EAAU;AACN,iBAAKF,QAAL,CAAcG,IAAd,CAAmBD,IAAnB;AACH;;AAEDE,qBAAa;AACT,gBAAIC,MAAJ;AACA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKN,QAAL,CAAcO,MAAlC,EAA0CD,GAA1C,EAA+C;AAC3C,oBAAI,OAAQ,KAAKN,QAAL,CAAcM,CAAd,CAAR,KAA8B,QAAlC,EAA4C;AACxC,wBAAIA,MAAM,CAAN,IAAWD,WAASG,SAAxB,EAAmC;AAC/BH,iCAAS,KAAKL,QAAL,CAAcM,CAAd,CAAT;AACH,qBAFD,MAEO;AACH,4BAAI,KAAKN,QAAL,CAAcM,CAAd,MAAqB,CAAzB,EAA4B;AACxB,mCAAO,uBAAP;AACH;AACDD,kCAAU,KAAKL,QAAL,CAAcM,CAAd,CAAV;AACH;AACJ;AACJ;AACD,gBAAID,WAAWG,SAAf,EAA0B;AACtB,qBAAKR,QAAL,GAAgB,CAACK,MAAD,CAAhB;AACA,uBAAOA,MAAP;AACH,aAHD,MAGO;AACH,sBAAM,IAAII,KAAJ,CAAU,oCAAV,CAAN;AACH;AACJ;;AAEDC,mBAAW;AACP,gBAAI,KAAKV,QAAL,CAAcO,MAAd,GAAuB,CAA3B,EACI,OAAO,KAAKP,QAAL,CAAcW,IAAd,CAAmB,MAAnB,CAAP,CADJ,KAEK,OAAO,aAAP;AACR;;AAEDC,kBAAU;AACN,gBAAI,KAAKZ,QAAL,CAAcO,MAAd,GAAuB,CAA3B,EAA8B;AAC1B,oBAAIM,WAAW,IAAf;AACA,qBAAK,IAAIX,IAAT,IAAiB,KAAKF,QAAtB,EAAgC;AAC5B,wBAAI,OAAOE,IAAP,KAAgB,QAApB,EACIW,WAAW,KAAX;AACP;AACD,oBAAIA,QAAJ,EAAc;AACV,2BAAO,KAAKb,QAAL,CAAcc,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,IAAIC,CAAjC,EAAoCL,IAApC,CAAyC,IAAzC,CAAP;AACH,iBAFD,MAGK;AACD,2BAAO,KAAKX,QAAL,CAAcc,IAAd,GAAqBH,IAArB,CAA0B,IAA1B,CAAP;AACH;AACJ,aAZD,MAaK,OAAO,OAAP;AACR;AApDY;;AAwDjBM,WAAOC,OAAP,GAAiBpB,UAAjB","file":"classAgainst.js","sourcesContent":["class Calculator {\r\n    constructor() {\r\n        this.expenses = [];\r\n    }\r\n\r\n    add(data) {\r\n        this.expenses.push(data);\r\n    }\r\n\r\n    divideNums() {\r\n        let divide;\r\n        for (let i = 0; i < this.expenses.length; i++) {\r\n            if (typeof (this.expenses[i]) === 'number') {\r\n                if (i === 0 || divide===undefined) {\r\n                    divide = this.expenses[i];\r\n                } else {\r\n                    if (this.expenses[i] === 0) {\r\n                        return 'Cannot divide by zero';\r\n                    }\r\n                    divide /= this.expenses[i];\r\n                }\r\n            }\r\n        }\r\n        if (divide !== undefined) {\r\n            this.expenses = [divide];\r\n            return divide;\r\n        } else {\r\n            throw new Error('There are no numbers in the array!')\r\n        }\r\n    }\r\n\r\n    toString() {\r\n        if (this.expenses.length > 0)\r\n            return this.expenses.join(\" -> \");\r\n        else return 'empty array';\r\n    }\r\n\r\n    orderBy() {\r\n        if (this.expenses.length > 0) {\r\n            let isNumber = true;\r\n            for (let data of this.expenses) {\r\n                if (typeof data !== 'number')\r\n                    isNumber = false;\r\n            }\r\n            if (isNumber) {\r\n                return this.expenses.sort((a, b) => a - b).join(', ');\r\n            }\r\n            else {\r\n                return this.expenses.sort().join(', ');\r\n            }\r\n        }\r\n        else return 'empty';\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = Calculator;"]}
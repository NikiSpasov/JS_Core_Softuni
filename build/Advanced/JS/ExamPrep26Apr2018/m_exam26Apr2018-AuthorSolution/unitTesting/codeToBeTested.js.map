{"version":3,"sources":["../../../../../../Advanced/JS/ExamPrep26Apr2018/m_exam26Apr2018-AuthorSolution/unitTesting/codeToBeTested.js"],"names":["SubscriptionCard","constructor","firstName","lastName","SSN","_firstName","_lastName","_SSN","_subscriptions","_blocked","isBlocked","addSubscription","line","startDate","endDate","push","isValid","date","filter","s","length","block","unblock","module","exports"],"mappings":";;;AAAA,UAAMA,gBAAN,CAAuB;AACnBC,oBAAYC,SAAZ,EAAuBC,QAAvB,EAAiCC,GAAjC,EAAsC;AAClC,iBAAKC,UAAL,GAAkBH,SAAlB;AACA,iBAAKI,SAAL,GAAiBH,QAAjB;AACA,iBAAKI,IAAL,GAAYH,GAAZ;AACA,iBAAKI,cAAL,GAAsB,EAAtB;AACA,iBAAKC,QAAL,GAAgB,KAAhB;AACH;;AAED,YAAIP,SAAJ,GAAgB;AACZ,mBAAO,KAAKG,UAAZ;AACH;;AAED,YAAIF,QAAJ,GAAe;AACX,mBAAO,KAAKG,SAAZ;AACH;;AAED,YAAIF,GAAJ,GAAU;AACN,mBAAO,KAAKG,IAAZ;AACH;;AAED,YAAIG,SAAJ,GAAgB;AACZ,mBAAO,KAAKD,QAAZ;AACH;;AAEDE,wBAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0C;AACtC,iBAAKN,cAAL,CAAoBO,IAApB,CAAyB;AACrBH,oBADqB;AAErBC,yBAFqB;AAGrBC;AAHqB,aAAzB;AAKH;;AAEDE,gBAAQJ,IAAR,EAAcK,IAAd,EAAoB;AAChB,gBAAI,KAAKP,SAAT,EAAoB,OAAO,KAAP;AACpB,mBAAO,KAAKF,cAAL,CAAoBU,MAApB,CAA2BC,KAAKA,EAAEP,IAAF,KAAWA,IAAX,IAAmBO,EAAEP,IAAF,KAAW,GAA9D,EACFM,MADE,CACKC,KAAK;AACT,uBAAOA,EAAEN,SAAF,IAAeI,IAAf,IACHE,EAAEL,OAAF,IAAaG,IADjB;AAEH,aAJE,EAIAG,MAJA,GAIS,CAJhB;AAKH;;AAEDC,gBAAQ;AACJ,iBAAKZ,QAAL,GAAgB,IAAhB;AACH;;AAEDa,kBAAU;AACN,iBAAKb,QAAL,GAAgB,KAAhB;AACH;AAhDkB;AAkDvBc,WAAOC,OAAP,GAAiBxB,gBAAjB","file":"codeToBeTested.js","sourcesContent":["class SubscriptionCard {\r\n    constructor(firstName, lastName, SSN) {\r\n        this._firstName = firstName;\r\n        this._lastName = lastName;\r\n        this._SSN = SSN;\r\n        this._subscriptions = [];\r\n        this._blocked = false;\r\n    }\r\n\r\n    get firstName() {\r\n        return this._firstName;\r\n    }\r\n\r\n    get lastName() {\r\n        return this._lastName;\r\n    }\r\n\r\n    get SSN() {\r\n        return this._SSN;\r\n    }\r\n\r\n    get isBlocked() {\r\n        return this._blocked;\r\n    }\r\n\r\n    addSubscription(line, startDate, endDate) {\r\n        this._subscriptions.push({\r\n            line,\r\n            startDate,\r\n            endDate\r\n        });\r\n    }\r\n\r\n    isValid(line, date) {\r\n        if (this.isBlocked) return false;\r\n        return this._subscriptions.filter(s => s.line === line || s.line === '*')\r\n            .filter(s => {\r\n                return s.startDate <= date &&\r\n                    s.endDate >= date;\r\n            }).length > 0;\r\n    }\r\n\r\n    block() {\r\n        this._blocked = true;\r\n    }\r\n\r\n    unblock() {\r\n        this._blocked = false;\r\n    }\r\n}\r\nmodule.exports = SubscriptionCard;"]}
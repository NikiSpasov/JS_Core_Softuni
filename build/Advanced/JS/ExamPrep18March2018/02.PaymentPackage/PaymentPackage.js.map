{"version":3,"sources":["../../../../../Advanced/JS/ExamPrep18March2018/02.PaymentPackage/PaymentPackage.js"],"names":["expect","PaymentPackage","constructor","name","value","VAT","active","_name","newValue","Error","length","_value","_VAT","_active","toString","output","join"],"mappings":"QAAqB,M,aAAjBA,M;;;AAGJ,UAAMC,cAAN,CAAqB;AACjBC,oBAAYC,IAAZ,EAAkBC,KAAlB,EAAyB;AACrB,iBAAKD,IAAL,GAAYA,IAAZ;AACA,iBAAKC,KAAL,GAAaA,KAAb;AACA,iBAAKC,GAAL,GAAW,EAAX,CAHqB,CAGD;AACpB,iBAAKC,MAAL,GAAc,IAAd,CAJqB,CAID;AACvB;;AAED,YAAIH,IAAJ,GAAW;AACP,mBAAO,KAAKI,KAAZ;AACH;;AAED,YAAIJ,IAAJ,CAASK,QAAT,EAAmB;AACf,gBAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAC9B,sBAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACH;AACD,gBAAID,SAASE,MAAT,KAAoB,CAAxB,EAA2B;AACvB,sBAAM,IAAID,KAAJ,CAAU,iCAAV,CAAN;AACH;AACD,iBAAKF,KAAL,GAAaC,QAAb;AACH;;AAED,YAAIJ,KAAJ,GAAY;AACR,mBAAO,KAAKO,MAAZ;AACH;;AAED,YAAIP,KAAJ,CAAUI,QAAV,EAAoB;AAChB,gBAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAC9B,sBAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACH;AACD,gBAAID,WAAW,CAAf,EAAkB;AACd,sBAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACH;AACD,iBAAKE,MAAL,GAAcH,QAAd;AACH;;AAED,YAAIH,GAAJ,GAAU;AACN,mBAAO,KAAKO,IAAZ;AACH;;AAED,YAAIP,GAAJ,CAAQG,QAAR,EAAkB;AACd,gBAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAC9B,sBAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;AACH;AACD,gBAAID,WAAW,CAAf,EAAkB;AACd,sBAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;AACH;AACD,iBAAKG,IAAL,GAAYJ,QAAZ;AACH;;AAED,YAAIF,MAAJ,GAAa;AACT,mBAAO,KAAKO,OAAZ;AACH;;AAED,YAAIP,MAAJ,CAAWE,QAAX,EAAqB;AACjB,gBAAI,OAAOA,QAAP,KAAoB,SAAxB,EAAmC;AAC/B,sBAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACH;AACD,iBAAKI,OAAL,GAAeL,QAAf;AACH;;AAEDM,mBAAW;AACP,kBAAMC,SAAS,CACV,YAAW,KAAKZ,IAAK,EAAtB,IAA2B,KAAKG,MAAL,KAAgB,KAAhB,GAAwB,aAAxB,GAAwC,EAAnE,CADW,EAEV,wBAAuB,KAAKF,KAAM,EAFxB,EAGV,gBAAe,KAAKC,GAAI,OAAM,KAAKD,KAAL,IAAc,IAAI,KAAKC,GAAL,GAAW,GAA7B,CAAkC,EAHtD,CAAf;AAKA,mBAAOU,OAAOC,IAAP,CAAY,IAAZ,CAAP;AACH;AApEgB","file":"PaymentPackage.js","sourcesContent":["let expect = require(\"chai\")\r\n\r\n\r\nclass PaymentPackage {\r\n    constructor(name, value) {\r\n        this.name = name;\r\n        this.value = value;\r\n        this.VAT = 20;      // Default value\r\n        this.active = true; // Default value\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    set name(newValue) {\r\n        if (typeof newValue !== 'string') {\r\n            throw new Error('Name must be a non-empty string');\r\n        }\r\n        if (newValue.length === 0) {\r\n            throw new Error('Name must be a non-empty string');\r\n        }\r\n        this._name = newValue;\r\n    }\r\n\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    set value(newValue) {\r\n        if (typeof newValue !== 'number') {\r\n            throw new Error('Value must be a non-negative number');\r\n        }\r\n        if (newValue < 0) {\r\n            throw new Error('Value must be a non-negative number');\r\n        }\r\n        this._value = newValue;\r\n    }\r\n\r\n    get VAT() {\r\n        return this._VAT;\r\n    }\r\n\r\n    set VAT(newValue) {\r\n        if (typeof newValue !== 'number') {\r\n            throw new Error('VAT must be a non-negative number');\r\n        }\r\n        if (newValue < 0) {\r\n            throw new Error('VAT must be a non-negative number');\r\n        }\r\n        this._VAT = newValue;\r\n    }\r\n\r\n    get active() {\r\n        return this._active;\r\n    }\r\n\r\n    set active(newValue) {\r\n        if (typeof newValue !== 'boolean') {\r\n            throw new Error('Active status must be a boolean');\r\n        }\r\n        this._active = newValue;\r\n    }\r\n\r\n    toString() {\r\n        const output = [\r\n            `Package: ${this.name}` + (this.active === false ? ' (inactive)' : ''),\r\n            `- Value (excl. VAT): ${this.value}`,\r\n            `- Value (VAT ${this.VAT}%): ${this.value * (1 + this.VAT / 100)}`\r\n        ];\r\n        return output.join('\\n');\r\n    }\r\n}\r\n"]}
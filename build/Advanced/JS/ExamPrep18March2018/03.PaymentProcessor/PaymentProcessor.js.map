{"version":3,"sources":["../../../../../Advanced/JS/ExamPrep18March2018/03.PaymentProcessor/PaymentProcessor.js"],"names":["PaymentProcessor","constructor","options","types","precision","setOptions","payments","Map","_precision","val","Error","_options","undefined","_payments","value","registerPayment","id","name","type","has","includes","set","deletePayment","delete","get","result","Number","parseFloat","toFixed","toString","size","totalMoney","values","map","p","reduce","a","b","generalPayments"],"mappings":"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","file":"PaymentProcessor.js","sourcesContent":["\"use strict\";\r\n\r\nclass PaymentProcessor {\r\n    constructor(options) {\r\n        this.types = [\"service\", \"product\", \"other\"];\r\n        this.precision = 2;\r\n        this.setOptions(options);\r\n        this.payments = new Map();\r\n    }\r\n\r\n    get precision(){\r\n        return this._precision;\r\n    }\r\n    set precision(val){\r\n        if (val !== \"\") {\r\n            this._precision = val\r\n        } else {\r\n            throw new Error(\"Incorrect precision\")\r\n        }\r\n    }\r\n\r\n    get options(){\r\n        return this._options;\r\n    }\r\n    set options(val){\r\n        this._options = val;\r\n    }\r\n\r\n    setOptions(options) {\r\n        if (options) {\r\n            if (options.types !== undefined) {\r\n                this.types = options.types;\r\n            }\r\n            if (options.precision !== undefined) {\r\n                this.precision = options.precision;\r\n            }\r\n        }\r\n    }\r\n\r\n    get payments(){\r\n        return this._payments;\r\n    }\r\n    set payments(value){\r\n        this._payments = value;\r\n    }\r\n\r\n    registerPayment(id, name, type, value) {\r\n        if (this.payments.has(id)) {\r\n            throw new Error(\"ID is in use\")\r\n        }\r\n        if (id === \"\" ||  name === \"\") {\r\n            throw new Error(\"Invalid input\")\r\n        }\r\n        if (typeof(value) !== \"number\") {\r\n            throw new Error(\"value must by number!\")\r\n        }\r\n        if (!this.types.includes(type)) {\r\n            throw new Error(\"No such type!\")\r\n        }\r\n\r\n        this.payments.set(id, {name, type, value})\r\n    }\r\n\r\n    deletePayment(id) {\r\n        if (this.payments.has(id)) {\r\n            this.payments.delete(id);\r\n            return;\r\n        }\r\n        throw new Error(\"ID not found\")\r\n    }\r\n\r\n    get(id) {\r\n        if (this.payments.has(id)) {\r\n            let result = this.payments.get(id);\r\n            return `Details about payment ID: ${id}\r\n- Name: ${result.name}\r\n- Type: ${result.type}\r\n- Value: ${Number.parseFloat(result.value).toFixed(this.precision)}`\r\n        }\r\n        throw new Error(\"ID not found\")\r\n    }\r\n\r\n    toString() {\r\n        let result = \"Summary:\\n\";\r\n        result += `- Payments: ${this.payments.size}\\n`;\r\n        let totalMoney;\r\n        if (this.payments.size > 0) {\r\n            totalMoney = [...this.payments.values()].map(p => p[\"value\"]).reduce((a,b) => a+b);\r\n        } else {\r\n            totalMoney = 0;\r\n            result+= `- Balance: 0`;\r\n            return result;\r\n        }\r\n        result+= `- Balance: ${Number.parseFloat(totalMoney).toFixed(this.precision)}`;\r\n        return result;\r\n    }\r\n}\r\n\r\nconst generalPayments = new PaymentProcessor(\"\");\r\n\r\ngeneralPayments.registerPayment('', 'Microchips', 'product', 15000);\r\n"]}
{"version":3,"sources":["../../../../../Advanced/JS/ExamPrep05Sept2017/03.Repository/RepositoryClass.js"],"names":["Repository","constructor","props","data","Map","_id","_props","objectInput","_data","val","add","entity","_validateEntity","a","giveId","set","get","id","has","Error","update","del","delete","count","size","ourProps","Object","getOwnPropertyNames","entityProps","length","ourProp","includes","TypeError","properties","name","age","birthday","repository","Date","console","log","anotherEntity","name1"],"mappings":";;;AAAA,UAAMA,UAAN,CAAiB;AACbC,oBAAYC,KAAZ,EAAmB;AACf,iBAAKC,IAAL,GAAY,IAAIC,GAAJ,EAAZ;AACA,iBAAKF,KAAL,GAAaA,KAAb;AACA,iBAAKG,GAAL,GAAW,CAAX;AACH;;AAED,YAAIH,KAAJ,GAAY;AACR,mBAAO,KAAKI,MAAZ;AACH;;AAED,YAAIJ,KAAJ,CAAUK,WAAV,EAAuB;AACnB,iBAAKD,MAAL,GAAcC,WAAd;AACH;;AAED,YAAIJ,IAAJ,GAAW;AACP,mBAAO,KAAKK,KAAZ;AACH;;AAED,YAAIL,IAAJ,CAASM,GAAT,EAAc;AACV,iBAAKD,KAAL,GAAaC,GAAb;AACH;;AAEDC,YAAIC,MAAJ,EAAY;AACR,gBAAIX,WAAWY,eAAX,CAA2BD,MAA3B,EAAmC,KAAKT,KAAxC,CAAJ,EAAoD;AAChD,oBAAIW,IAAI,KAAKC,MAAL,EAAR;AACA,qBAAKX,IAAL,CAAUY,GAAV,CAAcF,CAAd,EAAiBF,MAAjB;AACA,uBAAOE,CAAP;AACH;AACJ;;AAEDG,YAAIC,EAAJ,EAAQ;AACJ,gBAAI,KAAKd,IAAL,CAAUe,GAAV,CAAcD,EAAd,CAAJ,EAAuB;AACnB,uBAAO,KAAKd,IAAL,CAAUa,GAAV,CAAcC,EAAd,CAAP;AACH,aAFD,MAEO;AACH,sBAAM,IAAIE,KAAJ,CAAW,mBAAkBF,EAAG,kBAAhC,CAAN;AACH;AACJ;;AAEDG,eAAOH,EAAP,EAAWN,MAAX,EAAmB;AACf,gBAAI,KAAKR,IAAL,CAAUe,GAAV,CAAcD,EAAd,CAAJ,EAAuB;AACnB,oBAAIjB,WAAWY,eAAX,CAA2BD,MAA3B,EAAmC,KAAKT,KAAxC,CAAJ,EAAoD;AAChD,yBAAKC,IAAL,CAAUY,GAAV,CAAcE,EAAd,EAAkBN,MAAlB;AACH;AACJ,aAJD,MAIO;AACH,sBAAM,IAAIQ,KAAJ,CAAW,mBAAkBF,EAAG,kBAAhC,CAAN;AACH;AACJ;;AAEDI,YAAIJ,EAAJ,EAAQ;AACJ,gBAAI,KAAKd,IAAL,CAAUe,GAAV,CAAcD,EAAd,CAAJ,EAAuB;AACnB,qBAAKd,IAAL,CAAUmB,MAAV,CAAiBL,EAAjB;AACH,aAFD,MAEO;AACH,sBAAM,IAAIE,KAAJ,CAAW,mBAAkBF,EAAG,kBAAhC,CAAN;AACH;AAEJ;;AAED,YAAIM,KAAJ,GAAY;AACR,mBAAO,KAAKpB,IAAL,CAAUqB,IAAjB;AACH;;AAEDV,iBAAS;AACL,mBAAO,KAAKT,GAAL,EAAP;AACH;;AAED,eAAOO,eAAP,CAAuBD,MAAvB,EAA+BT,KAA/B,EAAsC;AAClC,gBAAIuB,WAAWC,OAAOC,mBAAP,CAA2BzB,KAA3B,CAAf;AACA,gBAAI0B,cAAcF,OAAOC,mBAAP,CAA2BhB,MAA3B,CAAlB;;AAEA,gBAAIc,SAASI,MAAT,KAAoBD,YAAYC,MAApC,EAA4C;AACxC,sBAAM,IAAIV,KAAJ,CAAU,2BAAV,CAAN;AACH;;AAED,iBAAK,IAAIW,OAAT,IAAoBL,QAApB,EAA8B;AAC1B,oBAAI,CAACG,YAAYG,QAAZ,CAAqBD,OAArB,CAAL,EAAoC;AAChC,0BAAM,IAAIX,KAAJ,CAAW,YAAWW,OAAQ,8BAA9B,CAAN;AACH,iBAFD,MAEO;AACH,wBAAI,OAAOnB,OAAOmB,OAAP,CAAP,KAA2B5B,MAAM4B,OAAN,CAA/B,EAA+C;AAC3C,8BAAM,IAAIE,SAAJ,CAAe,YAAWF,OAAQ,wBAAlC,CAAN;AACH;AACJ;AACJ;AACD,mBAAO,IAAP;AACH;AApFY;;AAuFjB,QAAIG,aAAa;AACbC,cAAM,QADO;AAEbC,aAAK,QAFQ;AAGbC,kBAAU;AAHG,KAAjB;AAKA;AACA,QAAIC,aAAa,IAAIrC,UAAJ,CAAeiC,UAAf,CAAjB;AACA;AACA,QAAItB,SAAS;AACTuB,cAAM,OADG;AAETC,aAAK,EAFI;AAGTC,kBAAU,IAAIE,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB;AAHD,KAAb;AAKAC,YAAQC,GAAR,CAAYH,WAAW3B,GAAX,CAAeC,MAAf,CAAZ,E,CAAqC;AACrC4B,YAAQC,GAAR,CAAYH,WAAW3B,GAAX,CAAeC,MAAf,CAAZ,E,CAAqC;AACrC4B,YAAQC,GAAR,CAAYH,WAAWrB,GAAX,CAAe,CAAf,CAAZ;AACA;AACAuB,YAAQC,GAAR,CAAYH,WAAWrB,GAAX,CAAe,CAAf,CAAZ;AACA;AACA;AACAL,aAAS;AACLuB,cAAM,OADD;AAELC,aAAK,EAFA;AAGLC,kBAAU,IAAIE,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB;AAHL,KAAT;AAKAD,eAAWjB,MAAX,CAAkB,CAAlB,EAAqBT,MAArB;AACA4B,YAAQC,GAAR,CAAYH,WAAWrB,GAAX,CAAe,CAAf,CAAZ;AACA;AACA;AACAqB,eAAWhB,GAAX,CAAe,CAAf;AACAkB,YAAQC,GAAR,CAAYH,WAAWd,KAAvB,E,CAA+B;AAC/B,QAAIkB,gBAAgB;AAChBC,eAAO,OADS;AAEhBP,aAAK,EAFW;AAGhBC,kBAAU,IAAIE,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAHM,KAApB;AAKA;AACAG,oBAAgB;AACZP,cAAM,OADM;AAEZC,aAAK,EAFO;AAGZC,kBAAU;AAHE,KAAhB;AAKCC,eAAW3B,GAAX,CAAe+B,aAAf,E,CAA+B;AAC/BJ,eAAWhB,GAAX,CAAe,CAAC,CAAhB,E,CAAoB","file":"RepositoryClass.js","sourcesContent":["class Repository {\r\n    constructor(props) {\r\n        this.data = new Map();\r\n        this.props = props;\r\n        this._id = 0;\r\n    }\r\n\r\n    get props() {\r\n        return this._props;\r\n    }\r\n\r\n    set props(objectInput) {\r\n        this._props = objectInput;\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    set data(val) {\r\n        this._data = val;\r\n    }\r\n\r\n    add(entity) {\r\n        if (Repository._validateEntity(entity, this.props)) {\r\n            let a = this.giveId();\r\n            this.data.set(a, entity);\r\n            return a;\r\n        }\r\n    }\r\n\r\n    get(id) {\r\n        if (this.data.has(id)) {\r\n            return this.data.get(id);\r\n        } else {\r\n            throw new Error(`Entity with id: ${id} does not exist!`)\r\n        }\r\n    }\r\n\r\n    update(id, entity) {\r\n        if (this.data.has(id)) {\r\n            if (Repository._validateEntity(entity, this.props)) {\r\n                this.data.set(id, entity)\r\n            }\r\n        } else {\r\n            throw new Error(`Entity with id: ${id} does not exist!`)\r\n        }\r\n    }\r\n\r\n    del(id) {\r\n        if (this.data.has(id)) {\r\n            this.data.delete(id)\r\n        } else {\r\n            throw new Error(`Entity with id: ${id} does not exist!`)\r\n        }\r\n\r\n    }\r\n\r\n    get count() {\r\n        return this.data.size\r\n    }\r\n\r\n    giveId() {\r\n        return this._id++;\r\n    }\r\n\r\n    static _validateEntity(entity, props) {\r\n        let ourProps = Object.getOwnPropertyNames(props);\r\n        let entityProps = Object.getOwnPropertyNames(entity);\r\n\r\n        if (ourProps.length !== entityProps.length) {\r\n            throw new Error(\"Different number of props\")\r\n        }\r\n\r\n        for (let ourProp of ourProps) {\r\n            if (!entityProps.includes(ourProp)) {\r\n                throw new Error(`Property ${ourProp} is missing from the entity!`)\r\n            } else {\r\n                if (typeof entity[ourProp] !== props[ourProp]) {\r\n                    throw new TypeError(`Property ${ourProp} is of incorrect type!`)\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\nlet properties = {\r\n    name: \"string\",\r\n    age: \"number\",\r\n    birthday: \"object\"\r\n};\r\n//Initialize the repository\r\nlet repository = new Repository(properties);\r\n// Add two entities\r\nlet entity = {\r\n    name: \"Kiril\",\r\n    age: 19,\r\n    birthday: new Date(1998, 0, 7)\r\n};\r\nconsole.log(repository.add(entity)); // Returns 0\r\nconsole.log(repository.add(entity)); // Returns 1\r\nconsole.log(repository.get(0));\r\n// {\"name\":\"Kiril\",\"age\":19,\"birthday\":\"1998-01-06T22:00:00.000Z\"}\r\nconsole.log(repository.get(1));\r\n// {\"name\":\"Kiril\",\"age\":19,\"birthday\":\"1998-01-06T22:00:00.000Z\"}\r\n//Update an entity\r\nentity = {\r\n    name: 'Valio',\r\n    age: 19,\r\n    birthday: new Date(1998, 0, 7)\r\n};\r\nrepository.update(1, entity);\r\nconsole.log(repository.get(1));\r\n// {\"name\":\"Valio\",\"age\":19,\"birthday\":\"1998-01-06T22:00:00.000Z\"}\r\n// Delete an entity\r\nrepository.del(0);\r\nconsole.log(repository.count); // Returns 1\r\nlet anotherEntity = {\r\n    name1: 'Nakov',\r\n    age: 26,\r\n    birthday: new Date(1991, 0, 21)\r\n};\r\n// repository.add(anotherEntity); // should throw an Error\r\nanotherEntity = {\r\n    name: 'Nakov',\r\n    age: 26,\r\n    birthday: 1991\r\n};\r\n repository.add(anotherEntity); // should throw a TypeError\r\n repository.del(-1); // should throw Error for invalid id\r\n\r\n"]}